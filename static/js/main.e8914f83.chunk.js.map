{"version":3,"sources":["todocontext.js","components/Header.component.jsx","components/TodoList.component.jsx","components/AddTodo.component.jsx","App.js","index.js"],"names":["TodoContext","createContext","TodoProvider","props","useState","localStorage","getItem","JSON","parse","todos","setTodos","useEffect","setItem","stringify","Provider","value","children","header","title","className","TodoList","useContext","deleteTodo","id","filter","todo","console","log","length","map","key","onClick","bind","role","AddTodo","newTodo","setNewTodo","onSubmit","e","preventDefault","prevTodos","uuid","type","onChange","target","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qKAEaA,EAAcC,0BAEdC,EAAe,SAAAC,GAAU,IAAD,EAEPC,oBAAU,WAChC,OAAOC,aAAaC,QAAQ,SACxBC,KAAKC,MAAMH,aAAaC,QAAQ,UAAY,MAJnB,mBAE1BG,EAF0B,KAEnBC,EAFmB,KAWjC,OAJAC,qBAAU,WACNN,aAAaO,QAAQ,QAASL,KAAKM,UAAUJ,MAC9C,CAACA,IAGA,kBAACT,EAAYc,SAAb,CAAsBC,MAAO,CAACN,EAAOC,IAChCP,EAAMa,WCfJ,SAASC,EAAT,GAA0B,IAATC,EAAQ,EAARA,MAC5B,OACI,6BACI,wBAAIC,UAAU,yBAAyBD,I,IC2BpCE,EA7BE,WAAO,IAAD,EACOC,qBAAWrB,GADlB,mBACZS,EADY,KACLC,EADK,KAGbY,EAAa,SAAAC,GACfb,EAAUD,EAAMe,QAAQ,SAAAC,GAAI,OAAIA,EAAKF,KAAOA,OAKhD,OAFAG,QAAQC,IAAIlB,EAAMmB,QAEG,IAAjBnB,EAAMmB,OAEN,wBAAIT,UAAU,cACRV,EAAMoB,KAAK,SAAAJ,GAAI,OACjB,wBAAIN,UAAU,kBAAkBW,IAAKL,EAAKF,IAAKE,EAAKP,MACpD,uBAAGC,UAAU,4CACbY,QAAST,EAAWU,U,EAAWP,EAAKF,WAMxC,yBAAKJ,UAAU,sBAAsBc,KAAK,SAC1C,qDADA,mE,uBCpBO,SAASC,IAAW,IAAD,EACA9B,mBAAS,IADT,mBACvB+B,EADuB,KACdC,EADc,OAEJf,qBAAWrB,GAFP,mBAEhBU,GAFgB,WAc9B,OACI,0BAAMS,UAAU,cAAckB,SATlB,SAAAC,GACZA,EAAEC,iBACFH,EAAW,IACG,KAAVD,GACJzB,GAAS,SAAA8B,GAAS,4BAAQA,GAAR,CAAmB,CAACtB,MAAOiB,EAASZ,GAAIkB,cAMtD,2BAAOC,KAAK,OAAOvB,UAAU,eAC7BJ,MAAOoB,EAASQ,SAbL,SAAAL,GAAC,OAAIF,EAAWE,EAAEM,OAAO7B,UAcpC,4BAAQI,UAAU,kBAAkBuB,KAAK,UAAzC,aCHGG,MAZf,WACE,OACE,kBAAC,EAAD,KACA,yBAAK1B,UAAU,kBACb,kBAAC,EAAD,CAAQD,MAAM,cACd,kBAAC,EAAD,MACA,kBAACgB,EAAD,SCTNY,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.e8914f83.chunk.js","sourcesContent":["import React, { useState, createContext, useEffect } from 'react';\r\n\r\nexport const TodoContext = createContext();\r\n\r\nexport const TodoProvider = props => {\r\n\r\n    const [todos, setTodos] = useState( () => {\r\n        return localStorage.getItem('todos') ?\r\n            JSON.parse(localStorage.getItem('todos')) : []\r\n    });\r\n    \r\n    useEffect(()=>{\r\n        localStorage.setItem('todos', JSON.stringify(todos))\r\n    }, [todos]);\r\n    \r\n    return(\r\n        <TodoContext.Provider value={[todos, setTodos]} >\r\n            {props.children}\r\n        </TodoContext.Provider>\r\n    )    \r\n\r\n}","import React from 'react'\r\n\r\nexport default function header({title}) {\r\n    return (\r\n        <div>\r\n            <h1 className=\"display-4 text-center\">{title}</h1>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useContext } from 'react';\r\nimport { TodoContext } from '../todocontext';\r\n\r\nconst TodoList = () => {\r\n    const [todos, setTodos] = useContext(TodoContext);\r\n    \r\n    const deleteTodo = id => {\r\n        setTodos( todos.filter (todo => todo.id !== id) );\r\n    }\r\n\r\n    console.log(todos.length);\r\n\r\n    if (todos.length !== 0) {\r\n    return (\r\n        <ul className=\"list-group\">\r\n            { todos.map (todo =>\r\n            <li className=\"list-group-item\" key={todo.id}>{todo.title}\r\n            <i className=\"fa fa-times fa-lg text-danger float-right\"\r\n            onClick={deleteTodo.bind(this, todo.id)}></i></li>) }\r\n        </ul>\r\n    )}\r\n\r\n    else {\r\n    return (\r\n        <div className=\"alert alert-warning\" role=\"alert\">\r\n        <strong>You have no Task!</strong> Either you are an efficient person or you \r\n        have nothing to do. \r\n        </div>\r\n    )\r\n    }\r\n}\r\n\r\nexport default TodoList;","import React, { useState, useContext } from 'react';\r\nimport { TodoContext } from '../todocontext';\r\nimport uuid from 'react-uuid'\r\n\r\nexport default function AddTodo() {\r\n    const [newTodo, setNewTodo] = useState(\"\");\r\n    const [todos, setTodos] = useContext(TodoContext);\r\n\r\n    const updateTodo = e => setNewTodo(e.target.value)\r\n\r\n    const addTodo = e => {\r\n        e.preventDefault();\r\n        setNewTodo(\"\");\r\n        if (newTodo!==\"\")\r\n        setTodos(prevTodos => [...prevTodos, {title: newTodo, id: uuid()}]);\r\n    }\r\n\r\n\r\n    return (\r\n        <form className=\"input-group\" onSubmit={addTodo}>\r\n            <input type=\"text\" className=\"form-control\"\r\n            value={newTodo} onChange={updateTodo}/>\r\n            <button className=\"btn btn-primary\" type=\"submit\">Add Task</button>\r\n        </form>\r\n    )\r\n}","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { TodoProvider} from './todocontext';\nimport Header from './components/Header.component';\nimport TodoList from './components/TodoList.component'\nimport AddTodo from './components/AddTodo.component'\n\nfunction App() {\n  return (\n    <TodoProvider>\n    <div className=\"container pt-5\">\n      <Header title=\"Todo List\"/>\n      <TodoList />\n      <AddTodo />\n    </div>\n    </TodoProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}